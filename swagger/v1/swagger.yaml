---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/sub/create_with_inactive_status":
    post:
      summary: create_with_inactive_status subscription
      tags:
      - Subscriptions
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                example:
                  value:
                    id: 1
                    user_id: 1
                    tuition_category: string
                    payment_status: inactive
                    expiration_date: '2023-11-05T23:13:39.989Z'
                    created_at: '2023-11-05T23:13:39.989Z'
                    updated_at: '2023-11-05T23:13:39.989Z'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                tuition_category:
                  type: string
  "/sub/{id}/cancel":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: cancel subscription
      tags:
      - Subscriptions
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example:
                  value:
                    message: Subscription cancelled successfully
  "/sub":
    get:
      summary: list subscriptions
      tags:
      - Subscriptions
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example:
                  value:
                  - id: 1
                    user_id: 1
                    tuition_category: string
                    payment_status: inactive
                    expiration_date: '2023-11-05T23:13:39.989Z'
                    created_at: '2023-11-05T23:13:39.989Z'
  "/sub/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show subscription
      tags:
      - Subscriptions
      description: Returns a subscription
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example:
                  value:
                    id: 1
                    user_id: 1
                    tuition_category: string
                    payment_status: inactive
                    expiration_date: '2023-11-05T23:13:39.989Z'
                    created_at: '2023-11-05T23:13:39.989Z'
                    updated_at: '2023-11-05T23:13:39.989Z'
    patch:
      summary: update subscription
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        description: ID of the subscription to update
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example:
                  value:
                    id: 1
                    user_id: 1
                    tuition_category: string
                    payment_status: inactive
                    expiration_date: '2023-11-05T23:13:39.989Z'
                    created_at: '2023-11-05T23:13:39.989Z'
                    updated_at: '2023-11-05T23:13:39.989Z'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                tuition_category:
                  type: string
                payment_status:
                  type: string
                expiration_date:
                  type: date
    put:
      summary: update subscription
      tags:
      - Subscriptions
      parameters:
      - name: id
        in: path
        description: ID of the subscription to update
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example:
                  value:
                    id: 1
                    user_id: 1
                    tuition_category: string
                    payment_status: inactive
                    expiration_date: '2023-11-05T23:13:39.989Z'
                    created_at: '2023-11-05T23:13:39.989Z'
                    updated_at: '2023-11-05T23:13:39.989Z'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                tuition_category:
                  type: string
                payment_status:
                  type: string
                expiration_date:
                  type: date
    delete:
      summary: delete subscription
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      tags:
      - Subscriptions
      responses:
        '204':
          description: successful
  "/users":
    get:
      summary: list users
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example:
                  value:
                  - id: 1
                    name: string
                    email: string
                    password: 
                    siape_code: string
                    role: string
                    created_at: '2023-11-05T23:13:39.989Z'
                    updated_at: '2023-11-05T23:13:39.989Z'
                    password_digest: "$2a$12$NPfxfVgQFpgcOSsojl.Kj.koRZAtCykhdIepZdPCALBe3/X6RtlNq"
    post:
      summary: create user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                example:
                  value:
                    id: 1
                    name: string
                    email: string
                    password: 
                    siape_code: string
                    role: string
                    created_at: '2023-11-05T23:13:39.989Z'
                    updated_at: '2023-11-05T23:13:39.989Z'
                    password_digest: "$2a$12$NPfxfVgQFpgcOSsojl.Kj.koRZAtCykhdIepZdPCALBe3/X6RtlNq"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                siape_code:
                  type: string
                role:
                  type: string
  "/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - Users
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example:
                  value:
                    id: 1
                    name: string
                    email: string
                    password: 
                    siape_code: string
                    role: string
                    created_at: '2023-11-05T23:13:39.989Z'
                    updated_at: '2023-11-05T23:13:39.989Z'
                    password_digest: "$2a$12$NPfxfVgQFpgcOSsojl.Kj.koRZAtCykhdIepZdPCALBe3/X6RtlNq"
    patch:
      summary: update user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example:
                  value:
                    id: 1
                    name: string
                    email: string
                    password: 
                    siape_code: string
                    role: string
                    created_at: '2023-11-05T23:13:39.989Z'
                    updated_at: '2023-11-05T23:13:39.989Z'
                    password_digest: "$2a$12$NPfxfVgQFpgcOSsojl.Kj.koRZAtCykhdIepZdPCALBe3/X6RtlNq"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                siape_code:
                  type: string
                role:
                  type: string
    put:
      summary: update user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                example:
                  value:
                    id: 1
                    name: string
                    email: string
                    password: 
                    siape_code: string
                    role: string
                    created_at: '2023-11-05T23:13:39.989Z'
                    updated_at: '2023-11-05T23:13:39.989Z'
                    password_digest: "$2a$12$NPfxfVgQFpgcOSsojl.Kj.koRZAtCykhdIepZdPCALBe3/X6RtlNq"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                siape_code:
                  type: string
                role:
                  type: string
    delete:
      summary: delete user
      tags:
      - Users
      responses:
        '204':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
